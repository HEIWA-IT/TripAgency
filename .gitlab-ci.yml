before_script:
  - '#!/bin/bash'
  - 'export LOG_PATH=$LOG_PATH'
  - 'export MAVEN_REPOSITORY=${MAVEN_REPOSITORY}'
  - 'export BUILD_TYPE=${BUILD_TYPE}'
  - 'export DOCKER_BUILD_OPTIONS=${DOCKER_BUILD_OPTIONS}'
  - 'export MAVEN_SETTINGS=${MAVEN_SETTINGS}'
  - 'export GRADLE_SETTINGS=${GRADLE_SETTINGS}'
  - 'export SONARQUBE_URL=${SONARQUBE_URL}'
  - 'export SONARQUBE_CREDENTIALS=${SONARQUBE_CREDENTIALS}'
  - 'export DOCKER_REGISTRY_URL=${DOCKER_REGISTRY_URL}'
  - 'export DOCKER_PROJECT_REGISTRY=${DOCKER_PROJECT_REGISTRY}'
  - 'export DOCKER_REGISTRY_USERNAME=${DOCKER_REGISTRY_USERNAME}'
  - 'export DOCKER_REGISTRY_PASSWORD=${DOCKER_REGISTRY_PASSWORD}'
  - 'export CUKEDOCTOR_MAIN_VERSION=${CUKEDOCTOR_MAIN_VERSION}'
  - 'export CUKEDOCTOR_MAIN_JAR=${CUKEDOCTOR_MAIN_JAR}'
  - 'export E2E_TEST_MODE=${E2E_TEST_MODE}'
  - 'export APP_NAME=${CI_PROJECT_NAME}'
  - 'export DOCKER_IMAGE=$(echo "${DOCKER_PROJECT_REGISTRY}/${APP_NAME}-exposition:${CI_COMMIT_SHORT_SHA}")'
  - 'export GRADLE_USER_HOME=$(pwd)/.gradle'

variables:
  GIT_SSL_NO_VERIFY: "true"
  DOCKER_TLS_CERTDIR: "/certs"
  MAVEN_OPTS: "-Dmaven.repo.local=/.m2"

cache:
  paths:
    - domain/build
    - repository/build
    - exposition/build
    - .gradle/wrapper
    - .gradle/caches
  policy: pull

stages:
  - setup
  - build_artifacts
  - quality
  - build_and_publish_container_image
  - e2e_deploy
  - e2e_testing
  - e2e_delete
  - living_documentation_for_e2e

check_variables:
  stage: setup
  image: heiwait/git-make-maven3.6.3-jdk16
  script:
    - './pipeline/scripts/1_setup/check_pipeline_variables.sh'
    - 'echo "VERSION=$(git describe --tags --always)" >> build.env'
  artifacts:
    reports:
      dotenv: build.env

build:
  stage: build_artifacts
  needs:
    - job: check_variables
      artifacts: true
  script:
    - './pipeline/scripts/2_build_artifacts/build.sh "${VERSION}"-SNAPSHOT'
  artifacts:
    paths:
      - /var/log
      - domain/build
      - repository/build
      - exposition/build
    expire_in: 1 day
  cache:
    key: "gradle-cache-key"
    paths:
      - .gradle/wrapper
      - .gradle/caches
    policy: push

code_analysis:
  stage: quality
  image: sonarsource/sonar-scanner-cli:4.6
  needs:
    - job: build
    - job: check_variables
      artifacts: true
  script:
    - './pipeline/scripts/3_quality/launch_quality_scan.sh'
  artifacts:
    paths:
      - domain/build
      - repository/build
      - exposition/build
    expire_in: 1 day

living_documentation_for_domain:
  stage: quality
  needs:
    - job: build
    - job: check_variables
      artifacts: true
  script:
    - './pipeline/scripts/3_quality/generate_living_documentation.sh domain "${VERSION}"-SNAPSHOT "${CUKEDOCTOR_MAIN_JAR}"'
  artifacts:
    paths:
      - domain/build
    expire_in: 1 day

build_and_publish_container_image:
  stage: build_and_publish_container_image
  needs:
    - job: build
    - job: check_variables
      artifacts: true
  script:
    - 'DOCKER_IMAGE=$(echo "${DOCKER_PROJECT_REGISTRY}/${APP_NAME}-exposition:${VERSION}-snapshot")'
    - './pipeline/scripts/4_build_and_publish_container_image/build_and_publish_container_image.sh "${CONTAINER_BUILD_TYPE}" "${DOCKER_IMAGE}"-snapshot "${VERSION}"-SNAPSHOT'

deploy_to_kubernetes:
  stage: e2e_deploy
  image: dtzar/helm-kubectl:3
  needs:
   - job: build_and_publish_container_image
   - job: check_variables
     artifacts: true
  script:
    - './pipeline/kubernetes/scripts/deploy_to_kubernetes.sh ${VERSION}-snapshot'
    - 'echo "VERSION=${VERSION}" >> build.env'

launch_e2e_test:
  stage: e2e_testing
  needs:
    - job: deploy_to_kubernetes
    - job: check_variables
      artifacts: true
  script:
    - './pipeline/scripts/5_e2e/launch_e2e_tests.sh "${VERSION}"-SNAPSHOT'
    - 'echo "VERSION=${VERSION}" >> build.env'
  artifacts:
    paths:
      - e2e/build
    expire_in: 1 day

delete_deployment_from_to_kubernetes:
  stage: e2e_delete
  image: dtzar/helm-kubectl:3
  needs:
    - job: launch_e2e_test
    - job: check_variables
      artifacts: true
  script:
    - './pipeline/kubernetes/scripts/delete_deployment_from_kubernetes.sh "${VERSION}"-snapshot'
    - 'echo "VERSION=${VERSION}" >> build.env'

living_documentation_for_e2e:
  stage: living_documentation_for_e2e
  needs:
    - job: launch_e2e_test
    - job: check_variables
      artifacts: true
  script:
    - './pipeline/scripts/3_quality/generate_living_documentation.sh e2e "${VERSION}" "${CUKEDOCTOR_MAIN_JAR}"'
  artifacts:
    paths:
      - e2e/build
    expire_in: 1 day